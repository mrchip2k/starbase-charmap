{"version":3,"sources":["Components/CharacterList/CharacterCell.jsx","Components/CharacterList/CharacterLine.jsx","Components/CharacterList/CharacterCategory.jsx","Components/CharacterList/CopiedPopupText.jsx","hintsDatabase.js","Components/CharacterList/Hints.jsx","Components/Misc/Container.jsx","Components/Header/BottomDynamicHeader.jsx","Components/Misc/InvisibleCopyTextbox.jsx","Components/Misc/VersionBadge.jsx","Components/Misc/NewTabLink.jsx","Pages/CharacterList.jsx","characterDatabase.js","App.js","reportWebVitals.js","index.js"],"names":["CharacterCell","props","selfRef","React","createRef","className","ref","this","onClick","copyFunc","current","getBoundingClientRect","char","Component","CharacterLine","buttons","line","map","character","i","CharacterCategory","lines","category","name","CopiedPopupText","visibleClass","isVisible","style","left","top","hintsDatabase","Hints","state","hintIndex","hintsLength","length","nextHint","bind","initIndex","index","localStorage","setItem","setState","attemptedIndex","result","setIndex","read","parseInt","getItem","isNaN","Container","addClass","children","BottomDynamicHeader","src","alt","InvisibleCopyTextbox","inputElementRef","event","select","document","execCommand","readOnly","type","value","copyContent","opacity","position","VersionBadge","id","NewTabLink","href","target","rel","CharacterList","copiedPopupVisible","copiedPopupX","copiedPopupY","copyTextboxRef","list","database","boundingClientRect","triggerPopup","triggerCopy","resultX","right","resultY","setTimeout","copyNow","App","characterDatabase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8552c65c.chunk.js","sourcesContent":["import React from 'react';\n\nclass CharacterCell extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selfRef = React.createRef();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<button \n\t\t\tclassName=\"character-cell\" \n\t\t\tref={this.selfRef}\n\t\t\tonClick={() => {\n\t\t\t\t// trigger popup and send client rect object. the popup does the math.\n\t\t\t\t// also send the character to copy.\n\t\t\t\tthis.props.copyFunc(this.selfRef.current.getBoundingClientRect() , this.props.char);\n\t\t\t} }>\n\n\t\t\t\t{this.props.char}\n\n\t\t\t</button>\n\t\t);\n\t};\n}\n\nexport default CharacterCell;","import React from 'react';\nimport CharacterCell from './CharacterCell';\n\nfunction CharacterLine(props) {\n\tconst lineAsArray = [...props.line];\n\n\t// Generate the buttons.\n\t// Passes down the copyFunc function, to let the buttons run it.\n\tlet buttons = lineAsArray.map((character, i) => \n\t\t<CharacterCell \n\t\t\tkey={i}\n\t\t\tchar={character} \n\t\t\tcopyFunc={props.copyFunc}\n\t\t/>\n\t);\n\treturn (\n\t\t<div className=\"character-line\">\n\t\t\t{buttons}\n\t\t</div>\n\t);\n}\n\nexport default CharacterLine;","import React from 'react';\nimport CharacterLine from './CharacterLine';\n\nfunction CharacterCategory(props) {\n\t// Generate the lines.\n\t// Passes down the copyFunc function, to let the buttons run it.\n\tlet lines = props.category.lines.map((line, i) => \n\t\t<CharacterLine \n\t\t\tkey={i}\n\t\t\tline={line} \n\t\t\tcopyFunc={props.copyFunc}\n\t\t/> \n\t);\n\n\treturn (\n\t\t<div className=\"noselect\">\n\t\t\t<p className=\"category-name\">{props.category.name}</p>\n\t\t\t<div className=\"telegrama\">{lines}</div>\n\t\t</div>\n\t);\n}\n\nexport default CharacterCategory;","import React from 'react';\n\nfunction CopiedPopupText(props) {\n\n\tlet visibleClass = props.isVisible ? \"copied-popup-visible\" : \"\";\n\n\treturn (\n\t\t<div \n\t\tclassName={\"copied-popup-container noselect \" + visibleClass}\n\t\tstyle={{\n\t\t\tleft: props.left,\n\t\t\ttop: props.top\n\t\t}}\n\t\t>\n\t\t\t<div>\n\t\t\t\t<p>✔ Copied !</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default CopiedPopupText;","let hintsDatabase =\n[\n\"starbase-charmap: Find and copy-paste special characters for Starbase Text Panels!\",\n\"This website uses the same font as the game: characters will look the same.\",\n\"Ingame text is tiny! Some of these characters are particularly thin and hard to read in most situations. Remember to test how things look directly in the game.\",\n\"Some characters are not monospace.\",\n\"Please report any issues or missing characters!\",\n];\n\nexport default hintsDatabase;","import React from 'react';\n\nimport hintsDatabase from \"../../hintsDatabase\"\n\nclass Hints extends React.Component {\n\t\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thintIndex : 420, //this value should always be overwritten\n\t\t};\n\t\tthis.hintsLength = hintsDatabase.length;\n\t\tthis.nextHint = this.nextHint.bind(this);\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.initIndex();\n\t}\n\n\tsetIndex(index) {\n\t\tlocalStorage.setItem(\"lastHintID\", index);\n\t\tthis.setState({ hintIndex: index });\n\t}\n\tnextHint(attemptedIndex){\n\t\tlet result = attemptedIndex+1 >= this.hintsLength ? 0 : attemptedIndex+1;\n\t\tthis.setIndex(result);\n\t}\n\n\tinitIndex() {\n\t\tlet read = parseInt( localStorage.getItem(\"lastHintID\") );\n\t\t\n\t\tif ( typeof(read)===\"number\" && !isNaN(read) ) {\n\t\t//A valid number was found in storage. Use that.\n\t\t\t//Also increment it, so each page load shows a different hint.\n\t\t\tthis.nextHint( read )\n\t\t} else {\n\t\t//Not a valid number. Probably the first page load. Set to 0.\n\t\t\tthis.setIndex( 0 )\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"hints-container noselect\" onClick={ ()=> {this.nextHint(this.state.hintIndex)} }>\n\n\t\t\t\t<p> { hintsDatabase[this.state.hintIndex] } </p>\n\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"hints-button telegrama\">\n\t\t\t\t\t\tNext Hint\n\t\t\t\t\t\t<span> { this.state.hintIndex+1 +\"/\"+ this.hintsLength } </span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Hints;","import React from 'react';\n\nfunction Container(props) {\n\treturn (\n\t\t<div className={`container ${props.addClass}`}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Container;","import React from 'react';\nimport Container from '../Misc/Container';\n\nfunction BottomDynamicHeader(props) {\n\treturn (\n\t\t<div>\n\t\t\t{/*The spacer that goes on the bottom of the page, \n\t\t\tto make sure content doesn't remain hidden below the header.\n\t\t\t2x the header height just to be safe, a bit sketchy but will do the job for now*/}\n\t\t\t<div className=\"header-spacer\"></div>\n\t\t\t<div className=\"header-spacer\"></div>\n\t\t\t\n\t\t\t{/*The header itself.*/}\n\t\t\t<div className=\"bottom-header-container\">\n\t\t\t\t<Container addClass=\"header bottom border\">\n\t\t\t\t\t<img src=\"/assets/lmb.svg\" alt=\"LMB\"/>\n\t\t\t\t\t<div><span>Leftclick to copy a character.</span></div>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default BottomDynamicHeader;","import React from 'react';\n\nclass InvisibleCopyTextbox extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.inputElementRef = React.createRef();\n\t};\n\n\tcopyNow(event) {\n\t\tthis.inputElementRef.current.select();\n\t\tdocument.execCommand(\"copy\");\n\t}\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t<input \n\t\t\t\treadOnly\n\t\t\t\ttype=\"text\" \n\n\t\t\t\tref={this.inputElementRef} \n\t\t\t\tvalue={this.props.copyContent}\n\n\t\t\t\tclassName=\"noselect\"\n\t\t\t\tstyle={{\n\t\t\t\t\topacity:0,\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\ttop: \"200%\"\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t};\n};\n\nexport default InvisibleCopyTextbox;","import React from 'react';\n\nfunction VersionBadge(props) {\n\treturn (\n\t\t<div id=\"version-badge\" className=\"telegrama\">\n\t\t\t<div> ⎯ starbase-charmap ⎯ v1.1.3 ⎯ </div>\n\t\t</div>\n\t);\n}\n\nexport default VersionBadge;","import React from 'react';\n\nfunction NewTabLink(props) {\n\treturn (\n\t\t<a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t{props.children}\n\t\t</a>\n\t);\n}\n\nexport default NewTabLink;","import React from 'react';\n\nimport CharacterCategory from '../Components/CharacterList/CharacterCategory';\nimport CopiedPopupText from '../Components/CharacterList/CopiedPopupText';\nimport Hints from '../Components/CharacterList/Hints';\nimport BottomDynamicHeader from '../Components/Header/BottomDynamicHeader';\nimport Container from \"../Components/Misc/Container\"\nimport InvisibleCopyTextbox from '../Components/Misc/InvisibleCopyTextbox';\nimport VersionBadge from '../Components/Misc/VersionBadge';\nimport NewTabLink from \"../Components/Misc/NewTabLink\";\n\nclass CharacterList extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcopiedPopupVisible : false,\n\t\t\tcopiedPopupX : \"100px\",\n\t\t\tcopiedPopupY : \"100px\",\n\t\t\tcharacter : \"ඞ\",\n\t\t};\n\t\t\n\t\tthis.copyFunc = this.copyFunc.bind(this);\n\n\t\tthis.copyTextboxRef = React.createRef();\n\n\t\t// Generate the character list.\n\t\t// Passes down the copyFunc function, to let the buttons run it.\n\t\tthis.list = this.props.database.map((category, i) => \n\t\t\t<CharacterCategory \n\t\t\t\tkey={i}\n\t\t\t\tcategory={category} \n\t\t\t\tcopyFunc={this.copyFunc}\n\t\t\t/>\n\t\t);\n\t}\n\n\n\n\tcopyFunc(boundingClientRect, character) {\n\t\tthis.triggerPopup(boundingClientRect);\n\t\tthis.triggerCopy(character);\n\t};\n\n\ttriggerPopup (boundingClientRect, character) {\n\n\t\t//midpoint between .left and .right\n\t\tconst resultX = boundingClientRect.left - \n\t\t(boundingClientRect.left-boundingClientRect.right)/2\n\n\t\t//.top gives height to start from\n\t\tconst resultY = boundingClientRect.top-13\n\t\t//For later: window.innerHeight\n\t\t\n\t\tthis.setState({ \n\t\t\tcopiedPopupVisible: true,\n\t\t\tcopiedPopupX : resultX, \n\t\t\tcopiedPopupY : resultY,\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ copiedPopupVisible: false });\n\t\t}, 300); \n\t\t// How long the popup is kept stable on screen, before starting the fadeaway animation. \n\t\t//Too short and it won't even show up. (CSS class is added and removed again before a render happens)\n\t}\n\n\ttriggerCopy(character) {\n\t\tthis.setState ({\n\t\t\tcharacter : character               // normal\n\t\t\t// character : character.repeat(200) // lag testing\n\t\t})\n\t\t\n\t\tsetTimeout(() => {\n\t\t\tthis.copyTextboxRef.current.copyNow()\n\t\t}, 100);\n\t\t// Delay is necessary because otherwise it doesnt have time to change the textbox's content, and copies the old content.\n\t}\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container addClass=\"page-content\">\n\t\t\t\t\t<VersionBadge/>\n\t\t\t\t\t<h1 className=\"centered\">Character List</h1>\n\n\t\t\t\t\t<Hints/>\n\n\t\t\t\t\t<div>{this.list}</div>\n\t\t\t\t\t\n\t\t\t\t\t{/* About */}\n\t\t\t\t\t<div style={{opacity:0.7}}>\n\t\t\t\t\t\t<h1 className=\"centered\">About</h1>\n\t\t\t\t\t\t<p>This is a utility website for the game Starbase. It lets you find and copy special characters, previewing them with the same font used in the game.</p>\n\t\t\t\t\t\t<p>The main purpose of this is to create nicer text panel UI.</p>\n\t\t\t\t\t\t<h4>Contact me</h4>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>DM me on Discord: mrchip#4403</li>\n\t\t\t\t\t\t\t<li>Email: <a href=\"mailto:mrchip2k@gmail.com\">mrchip2k@gmail.com</a></li>\n\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t<p className=\"highlight\">Found a character that works in game and should be included here? Is anything here broken? Have any suggestions or feedback? Feel free to contact me! </p>\n\n\t\t\t\t\t\t<h4>About Telegrama, the font.</h4>\n\t\t\t\t\t\t<p>The font can be found <NewTabLink href=\"http://yoworks.com/telegrama/index.html\">here</NewTabLink>.</p>\n\t\t\t\t\t\t<p>Starbase disabled many special characters. This means you will find new characters in the original font linked above, but most that aren't included in this website do not display correctly ingame. (Every character in this website is confirmed to work in Starbase.)</p>\n\t\t\t\t\t\t<p>It's not entirely clear to me if its license allows the font to be used in a website like this - if you are the font's author and have an issue with this, please contact me!</p>\n\n\t\t\t\t\t\t<h4>Github repository</h4>\n\t\t\t\t\t\t<p>The source code is available <NewTabLink href=\"https://github.com/mrchip2k/starbase-textpanel-util\">here</NewTabLink>.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\n\t\t\t\t\n\t\t\t\t<InvisibleCopyTextbox \n\t\t\t\tcopyContent={this.state.character}\n\t\t\t\tref={this.copyTextboxRef}\n\t\t\t\t/>\n\n\t\t\t\t<CopiedPopupText \n\t\t\t\tisVisible={this.state.copiedPopupVisible}\n\t\t\t\tleft={this.state.copiedPopupX}\n\t\t\t\ttop={this.state.copiedPopupY}\n\t\t\t\t/>\n\n\t\t\t\t<BottomDynamicHeader/>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default CharacterList;","let database =[\n{\n\tname: \"Miscellaneous\",\n\tlines: \n\t[\n\t\t\"‹<«〈《》〉»>\", \n\t\t\"「『【〓】』」〔〘〕\",\n\t\t\"'¦·•°–—―‘“”’+±×÷※◎♠♡♣♤♥♧♩♪♬\",\n\t\t\"™©®¿¡§$¢£¥€ıłŁŒœŠšŸŽžμ\", \n\t\t\"①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰\",\n\t],\n},\n\n{\n\tname: \"Wide Symbols\",\n\tlines:\n\t[\n\t\t\"ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ\",\n\t\t\"ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ\",\n\t\t\"０１２３４５６７８９\", \n\t\t\"＆（）＊－／：＝［］｛｝￣\",\n\t],\n},\n\n{\n\tname: \"Accents\",\n\tlines:\n\t[\n\t\t\"^`~¨¯´¸ˇ˘˙˚˜˝\",\n\t\t\"ÀÁÂÃÄÅÆÇÈÉÊËÍÌÎÏÐÑÒÓÔÕÖØÙÚÛÜÝÞßß\", \n\t\t\"àáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ\", \n\t],\n},\n\n];\n\nexport default database;","import './css/App.css';\nimport './css/Theme.css';\n\nimport CharacterList from './Pages/CharacterList';\n\nimport characterDatabase from \"./characterDatabase\";\n\nfunction App() {\n\treturn (\n\t\t<CharacterList database={characterDatabase}/>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}